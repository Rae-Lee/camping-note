const express = require('express')
const router = express.Router()
const passport = require('../config/passport')
const upload = require('../middleware/multer')
const campsiteController = require('../controllers/campsite-controller')
const albumController = require('../controllers/album-controller')
const userController = require('../controllers/user-controller')
const messageController = require('../controllers/message-controller')
const admin = require('./modules/admin')
const { generalErrorHandler } = require('../middleware/error-handler')
const { authenticated, authenticatedAdmin } = require('../middleware/auth')
// auth
router.use('/admin', authenticatedAdmin, admin)
router.get('/signup', userController.signUpPage)
router.post('/signup', userController.signUp)
router.get('/signin', userController.signInPage)
router.post('/signin', passport.authenticate('local', { failureRedirect: '/signin', failureFlash: true }), userController.signIn)
router.get('/facebook', passport.authenticate('facebook', { scope: ['email', 'public_profile'] }))
router.get('/facebook/callback', passport.authenticate('facebook', { failureRedirect: '/users/login', successRedirect: '/' }))
router.get('/logout', userController.logout)
// campsite
router.get('/campsites/top', campsiteController.getTopCampsites)
router.get('/campsites/search', campsiteController.getSearch)
router.get('/campsites/create', authenticated, campsiteController.createCampsite)
router.get('/campsites/:id', campsiteController.getCampsite)
router.get('/campsites', campsiteController.getCampsites)
router.post('/campsites', authenticated, upload.single('image'), campsiteController.postCampsite)
// album
router.get('/albums/feeds', albumController.getFeeds)
router.get('/albums/top', albumController.getTopAlbums)
router.get('/albums/create', authenticated, albumController.createAlbum)
router.get('/albums/:id/edit', authenticated, albumController.editAlbum)
router.get('/albums/:id', albumController.getAlbum)
router.post('/albums', authenticated, upload.fields([{ name: 'image', maxCount: 1 }, { name: 'photo', maxCount: 30 }, { name: 'photoFile', maxCount: 30 }])
  , albumController.postAlbum)
router.put('/albums/:id', authenticated, upload.fields([{ name: 'image', maxCount: 1 }, { name: 'photo', maxCount: 30 }, { name: 'photoFile', maxCount: 30 }])
  , albumController.putAlbum)
router.delete('/albums/:id', authenticated, albumController.deleteAlbum)
// message
router.post('/messages', authenticated, messageController.postMessage)
// user
router.get('/users/:id/edit', authenticated, userController.editUser)
router.get('/users/:id', userController.getUser)
router.put('/users/:id', authenticated, upload.single('image'), userController.putUser)
router.post('/like/:id', authenticated, userController.addLike)
router.delete('/like/:id', authenticated, userController.removeLike)
router.get('/', (req, res) => { return res.redirect('/campsites') })
router.use('/', generalErrorHandler)
module.exports = router
